import { formatCodeString } from '@utils';
import fs from 'fs-extra';
import path from 'node:path';

import { GeneratorConfig } from '@prom-cms/schema';

export type CompilePromConfigOptions = {
  config: GeneratorConfig;
  appRoot: string;
};

const recursivePrintObjectToPhp = (obj: object | Map<any, any> | []) => {
  let result = ``;
  const objAsArray = Array.isArray(obj)
    ? obj.map((item) => [null, item])
    : obj instanceof Map
      ? obj
      : Object.entries(obj);

  const items: string[] = [];

  for (const [key, value] of objAsArray) {
    let formattedValue = '';

    switch (typeof value) {
      case 'boolean':
      case 'number':
        formattedValue = String(value);
        break;
      case 'object':
        formattedValue = recursivePrintObjectToPhp(value);
        break;
      default:
        formattedValue = `'${String(value)}'`;
        break;
    }

    if (key) {
      formattedValue = `'${key}' => ${formattedValue}`;
    }

    items.push(formattedValue);
  }

  result = items.join(', \n');

  return `[${result}]`;
};

export const compilePromConfig = async ({
  config,
  appRoot,
}: CompilePromConfigOptions) => {
  const filepath = path.join(appRoot, '.prom-cms', 'compiled', 'config.php');

  let contents = `<?php\n
/**
 * This file is generated by PromCMS, do not edit this file as changes made to this file will be overriden in the next model sync. 
 * Updates should be made to ../UserRole.php as that is not overriden.
 */

return [\n`;

  for (const [key, value] of Object.entries(config)) {
    contents += `"${key}" => ${recursivePrintObjectToPhp(value)},`;
    contents += '\n';
  }

  contents += '];';

  await fs.ensureDir(path.dirname(filepath));
  await fs.writeFile(
    filepath,
    await formatCodeString(contents, path.basename(filepath))
  );
};
