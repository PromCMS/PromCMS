<?php

use Illuminate\Database\Eloquent\Model;
<% if (softDelete) { %>use Illuminate\Database\Eloquent\SoftDeletes;<% } %>
<% if (events.beforeSave.slugify) { %>use Illuminate\Support\Str;<% } %>

class <%- modelName %> extends Model
{
  <% if (softDelete) { %>
    use SoftDeletes;
  <% } %>

  protected $table = '<%- tableName %>';
  protected $modelIcon = '<%- icon %>';
  public $timestamps = <%- timestamp ? 'true' : 'false' %>;
  protected $hasSoftDeletes = <%- softDelete ? 'true' : 'false' %>;
  protected $adminSettings = [
    "layout" => "<%- admin.layout %>"
  ];
  
  <% if (columnCasts.length) { %>
    protected $casts = [
      <% columnCasts.forEach(([columnKey, castTo]) => { %>
        '<%- columnKey %>' => '<%- castTo %>',
      <%  });%> 
    ];
  <% } %>

  <% if (events.shouldInclude()) { %>
    /**
    * Takes care of events
    */
    public static function boot()
    {
      parent::boot();

      <% if (events.beforeSave.shouldInclude()) { %>
        static::saving(function ($post) {
          <% if (events.beforeSave.slugify) { %>
            // Take care of slugs
            foreach (
              array_filter(self::$tableColumns, function ($col) {
                return $col['type'] === 'slug';
              })
              as $colKey => $col
            ) {
              if ($post->{$col['of']}) {
                $post->{$colKey} = Str::slug($post->{$col['of']});
              }
            }
          <% } %>
        });
      <% } %>
    }
  <% } %>

  protected static $tableColumns = [
    <% 
      Object.keys(formattedColumns).forEach(columnKey => { 
      const formattedColumnSettings = formattedColumns[columnKey];
    %>
       '<%- columnKey %>' => [
          <%- formattedColumnSettings.join(', ') %>
        ],
    <% }) %>
  ];

  <%
    const fillableKeys =
      Object.keys(columns).join("', '");
  %>
  protected $fillable = [
    '<%- fillableKeys %>'
  ];

  <%
    const hiddenKeys =
      Object.keys(columns)
        .filter((columnKey) => columns[columnKey].hide)
        .join("', '");
  %>
  <% if (hiddenKeys.length) { %>
  protected $hidden = [
    '<%- hiddenKeys %>'
  ];
  <% } %>

  public function getSummary () {
      return (object)[
        "columns" => self::$tableColumns,
        "tableName" => $this->table,
        "icon" => $this->modelIcon,
        "hasTimestamps" => $this->timestamps,
        "hasSoftDelete" => $this->hasSoftDeletes,
        "admin" => $this->adminSettings
      ];
  }
}